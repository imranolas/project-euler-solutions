const { fibonacci, sumOfEvenSmallerThan } = require('./');

/**
 * Each new term in the Fibonacci sequence is generated by adding the
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 *
 **/

describe('#fibonacci', () => {
  it('should generate a lazy sequence', () => {
    let seq = [];
    const fib = fibonacci();
    for (let i = 0; i < 10; i++) {
      seq.push(fib.next().value);
    }

    expect(seq).toEqual([1, 2, 3, 5, 8, 13, 21, 34, 55, 89]);
  });
});

describe('sumOfEven', () => {
  it.each`
    n      | result
    ${20}  | ${10}
    ${4e6} | ${4613732}
  `(
    'should sum of even fibonacci numbers smaller than $n should equal $result',
    ({ n, result }) => {
      expect(sumOfEvenSmallerThan(n)).toBe(result);
    }
  );
});
